(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{166:function(e,t,n){"use strict";n.r(t),n.d(t,"AppointmentEditorPanel",function(){return f});var i=n(0),a=n(8),p=n(3),s=n(13),r=n(4),o=n(2),m=n(7),c=n(147),l=n(19),h=n(148),d=n(331),u=n(143),b=n(333),E=n(303),g=n(144),y=n(141),O=n(81),j=n(135),N=n(161),A=n(1);let f=class extends A.Component{constructor(){super(...arguments),this.timerInputs=[],this.timeComb={hours:this.calcTime.hours,minutes:this.calcTime.minutes,am:this.calcTime.am}}get calcTime(){if(!this.props.appointment)return{hours:12,minutes:"00",am:!1};const e=new Date(this.props.appointment.date).toLocaleTimeString("en-US");return{hours:Number(e.split(":")[0]),minutes:Number(e.split(":")[1])<30?"00":"30",am:"am"===e.replace(/[^A-Z]/gi,"").toLowerCase()}}get otherAppointmentsNumber(){const e=this.props.appointment;return e?s.z.appointmentsForDay(e.date,0,0).filter(t=>t._id!==e._id).length:[].length-1}get treatmentOptions(){const e=JSON.parse(JSON.stringify(s.jb.list));if(this.props.appointment&&this.props.appointment.treatmentID.indexOf("|")>-1){const t=this.props.appointment.treatmentID.split("|"),n=this.props.appointment.treatmentID,i=t[0],a=Object(r.r)(t[1]);e.push(new s.w({_id:n,expenses:a,type:i}))}return e}get canEdit(){return p.B.currentUser.canEditAppointments}setTimeFromCombination(){if(!this.props.appointment)return;12===this.timeComb.hours&&(this.timeComb.am=!0);const e=new Date(this.props.appointment.date);e.setHours(this.timeComb.am?this.timeComb.hours:this.timeComb.hours+12,Number(this.timeComb.minutes),0,0),this.props.appointment.date=e.getTime(),this.forceUpdate()}render(){return this.props.appointment?A.createElement(c.a,{isOpen:!!this.props.appointment,type:l.a.medium,closeButtonAriaLabel:"Close",isLightDismiss:!0,onDismiss:this.props.onDismiss,onRenderNavigation:()=>A.createElement(a.k,{className:"panel-heading"},A.createElement(a.c,{span:22},A.createElement(a.i,{secondaryElement:A.createElement("span",null,Object(r.j)(this.props.appointment.date,s.bb.getSetting("date_format"))," ","/"," ",this.props.appointment&&this.props.appointment.treatment?this.props.appointment.treatment.type:""),name:(this.props.appointment.patient||{name:""}).name,size:3})),A.createElement(a.c,{span:2,className:"close"},A.createElement(h.a,{iconProps:{iconName:"cancel"},onClick:()=>{this.props.onDismiss()}})))},A.createElement("div",{className:"appointment-editor"},A.createElement(a.l,{title:Object(p.A)("Appointment")},A.createElement(a.k,{gutter:12},A.createElement(a.c,{sm:12},A.createElement("div",{className:"appointment-input date"},A.createElement(d.a,{label:Object(p.A)("Date"),disabled:!this.canEdit,className:"appointment-date",placeholder:Object(p.A)("Select a date"),value:new Date(this.props.appointment.date),onSelectDate:e=>{e&&this.props.appointment.setDate(e.getTime())},formatDate:e=>Object(r.j)(e||0,s.bb.getSetting("date_format"))}),A.createElement("p",{className:"insight"},Object(p.A)("With")," ",A.createElement("span",{className:"num-"+this.otherAppointmentsNumber},this.otherAppointmentsNumber)," ",Object(p.A)("other appointment")))),A.createElement(a.c,{sm:12},A.createElement("div",{className:"appointment-input time"},A.createElement(a.k,{gutter:12},A.createElement(u.a,null,Object(p.A)("Time")),A.createElement(a.k,{gutter:0},A.createElement(a.c,{span:8},A.createElement(b.a,{options:[12,1,2,3,4,5,6,7,8,9,10,11].map(e=>({key:e.toString(),text:e<10?`0${e.toString()}`:e.toString()})),selectedKey:this.calcTime.hours.toString(),onChange:(e,t)=>{t&&(this.timeComb.hours=Number(t.key.toString()),this.setTimeFromCombination())}})),A.createElement(a.c,{span:8},A.createElement(b.a,{options:["00","30"].map(e=>({key:e,text:e})),selectedKey:this.calcTime.minutes,onChange:(e,t)=>{t&&(this.timeComb.minutes=t.key.toString(),this.setTimeFromCombination())}})),A.createElement(a.c,{span:8},A.createElement(b.a,{options:[{text:"am",key:"am"},{text:"pm",key:"pm"}],selectedKey:this.calcTime.am?"am":"pm",onChange:(e,t)=>{t&&(this.timeComb.am="am"===t.key.toString(),this.setTimeFromCombination())}}))))))),A.createElement("div",{className:"appointment-input date"},A.createElement("label",null,Object(p.A)("Operating staff")," "),s.db.list.filter(e=>e.operates).map(e=>{const t=this.props.appointment.staffID.indexOf(e._id)>-1;return A.createElement(E.a,{key:e._id,label:e.name,disabled:!this.canEdit||!t&&-1===e.onDutyDays.indexOf(new Date(this.props.appointment.date).toLocaleDateString("en-us",{weekday:"long"})),checked:t,onChange:(t,n)=>{n?this.props.appointment.staffID.push(e._id):this.props.appointment.staffID.splice(this.props.appointment.staffID.indexOf(e._id),1),this.props.appointment.triggerUpdate++}})}))),A.createElement(a.l,{title:Object(p.A)("Case Details")},A.createElement(g.a,{multiline:!0,disabled:!this.canEdit,label:Object(p.A)("Details"),value:this.props.appointment.notes,onChange:(e,t)=>{this.props.appointment.notes=t}}),A.createElement("br",null),A.createElement(a.k,{gutter:12},A.createElement(a.c,{sm:12},A.createElement("div",{className:"appointment-input treatment"},A.createElement(b.a,{label:Object(p.A)("Treatment"),disabled:!this.canEdit,className:"treatment-type",selectedKey:this.props.appointment.treatmentID,options:this.treatmentOptions.sort((e,t)=>e.type.localeCompare(t.type)).map(e=>({key:e._id,text:e.type})),onChange:(e,t)=>{this.props.appointment.treatmentID=t.key.toString()}}))),A.createElement(a.c,{sm:12},A.createElement("div",{className:"appointment-input units-number"},A.createElement(g.a,{label:Object(p.A)("Units number"),disabled:!this.canEdit,type:"number",value:this.props.appointment.units.toString(),onChange:(e,t)=>{this.props.appointment.units=Object(r.r)(t)}}))),A.createElement(a.c,{span:24}," ",A.createElement("div",{className:"appointment-input involved-teeth"},A.createElement(a.n,{disabled:!this.canEdit,placeholder:Object(p.A)("Involved teeth"),value:this.props.appointment.involvedTeeth.map(e=>({key:e.toString(),text:e.toString()})),strict:!0,options:s.h.map(e=>({key:e.toString(),text:e.toString()})),formatText:e=>`${e.toString()} - ${Object(r.b)(Object(r.r)(e)).Palmer}`,onChange:e=>{this.props.appointment.involvedTeeth=e.map(e=>Object(r.r)(e.key))}})))),s.bb.getSetting("module_prescriptions")?A.createElement("div",null,A.createElement("hr",{className:"appointment-hr"}),A.createElement("div",{className:"appointment-input prescription"},A.createElement(a.n,{disabled:!this.canEdit,className:"prescription",value:this.props.appointment.prescriptions.map(e=>({key:e.id,text:e.prescription})),options:s.Q.list.map(this.prescriptionToTagInput),onChange:e=>{this.props.appointment.prescriptions=e.map(e=>({id:e.key,prescription:e.text}))},strict:!0,placeholder:Object(p.A)("Prescription")})),A.createElement("div",{id:"prescription-items"},A.createElement("div",{className:"print-heading"},A.createElement("h2",null,p.B.currentUser.name),A.createElement("hr",null),A.createElement("h3",null,"Patient:"," ",(this.props.appointment.patient||new s.l).name),A.createElement(a.k,null,A.createElement(a.c,{span:12},A.createElement("h4",null,"Age:"," ",(this.props.appointment.patient||new s.l).age)),A.createElement(a.c,{span:12},A.createElement("h4",null,"Gender:"," ",(this.props.appointment.patient||new s.l).gender?"Female":"Male"))),A.createElement("hr",null)),this.props.appointment.prescriptions.map(e=>A.createElement(a.k,{key:e.id},A.createElement(a.c,{span:20,className:"m-b-5"},A.createElement(a.j,{text:e.prescription.split(":")[0],onRenderInitials:()=>A.createElement(y.a,{iconName:"pill"}),subText:e.prescription.split(":")[1]})),A.createElement(a.c,{span:4,style:{textAlign:"right"}},this.canEdit?A.createElement(h.a,{iconProps:{iconName:"delete"},onClick:()=>{this.props.appointment.prescriptions=this.props.appointment.prescriptions.filter(t=>t.id!==e.id)}}):"")))),this.props.appointment.prescriptions.length?A.createElement(O.a,{onClick:print,iconProps:{iconName:"print"},text:Object(p.A)("Print prescription")}):""):""),A.createElement(a.l,{title:Object(p.A)("Expenses & Price")},A.createElement(a.k,{gutter:12},A.createElement(a.c,{sm:16},s.bb.getSetting("time_tracking")?A.createElement("div",{className:"appointment-input time"},A.createElement("label",null,Object(p.A)("Time (hours, minutes, seconds)")),A.createElement(g.a,{className:"time-input hours",type:"number",disabled:!this.canEdit,value:this.formatMillisecondsToTime(this.props.appointment.time).hours,onChange:(e,t)=>{this.timerInputs[0]=Object(r.r)(t),this.manuallyUpdateTime()}}),A.createElement(g.a,{className:"time-input minutes",type:"number",disabled:!this.canEdit,value:this.formatMillisecondsToTime(this.props.appointment.time).minutes,onChange:(e,t)=>{this.timerInputs[1]=Object(r.r)(t),this.manuallyUpdateTime()}}),A.createElement(g.a,{className:"time-input seconds",type:"number",disabled:!this.canEdit,value:this.formatMillisecondsToTime(this.props.appointment.time).seconds,onChange:(e,t)=>{this.timerInputs[2]=Object(r.r)(t),this.manuallyUpdateTime()}}),this.props.appointment.timer?A.createElement(j.a,{iconProps:{iconName:"Timer"},disabled:!this.canEdit,className:"appendage stop",text:Object(p.A)("Stop"),onClick:()=>{const e=this.props.appointment.timer;e&&clearInterval(e),this.props.appointment.timer=null}}):A.createElement(j.a,{iconProps:{iconName:"Timer"},disabled:!this.canEdit,className:"appendage",text:Object(p.A)("Start"),onClick:()=>{const e=s.z.getIndexByID(this.props.appointment._id),t=s.z.list[e];this.props.appointment.timer=window.setInterval(()=>{t.time=t.time+1e3},1e3)}}),A.createElement("p",{className:"payment-insight"},A.createElement(a.m,{text:Object(p.A)("Time value")+": "+s.bb.getSetting("currencySymbol")+Object(r.s)(this.props.appointment.spentTimeValue).toString(),type:a.o.info}),A.createElement("br",null),A.createElement(a.m,{text:Object(p.A)("Expenses")+": "+s.bb.getSetting("currencySymbol")+Object(r.s)(this.props.appointment.expenses).toString(),type:a.o.info}))):""),A.createElement(a.c,{sm:24},A.createElement("div",{className:"appointment-input paid"},A.createElement(a.k,{gutter:12},A.createElement(a.c,{sm:8},A.createElement(g.a,{type:"number",disabled:!this.canEdit,label:Object(p.A)("Price"),value:this.props.appointment.finalPrice.toString(),onChange:(e,t)=>{this.props.appointment.finalPrice=Object(r.r)(t)},prefix:s.bb.getSetting("currencySymbol")})),A.createElement(a.c,{sm:8},A.createElement(g.a,{type:"number",disabled:!this.canEdit,label:Object(p.A)("Paid"),value:this.props.appointment.paidAmount.toString(),onChange:(e,t)=>{this.props.appointment.paidAmount=Object(r.r)(t)},prefix:s.bb.getSetting("currencySymbol")})),A.createElement(a.c,{sm:8},A.createElement(g.a,{type:"number",disabled:!0,label:this.props.appointment.outstandingAmount?Object(p.A)("Outstanding"):this.props.appointment.overpaidAmount?Object(p.A)("Overpaid"):Object(p.A)("Outstanding"),value:this.props.appointment.outstandingAmount?this.props.appointment.outstandingAmount.toString():this.props.appointment.overpaidAmount?this.props.appointment.overpaidAmount.toString():this.props.appointment.outstandingAmount.toString(),prefix:s.bb.getSetting("currencySymbol")}))),A.createElement("p",{className:"payment-insight"},A.createElement(a.m,{text:Object(p.A)("Profit")+": "+s.bb.getSetting("currencySymbol")+Object(r.s)(this.props.appointment.profit).toString(),type:a.o.success}),A.createElement("br",null),A.createElement(a.m,{text:Object(p.A)("Profit percentage")+": "+Object(r.s)(100*this.props.appointment.profitPercentage).toString()+"%",type:a.o.success}))))),A.createElement(a.k,{gutter:12},A.createElement(a.c,{sm:24},A.createElement(N.a,{defaultChecked:this.props.appointment.isDone,onText:Object(p.A)("Done"),offText:Object(p.A)("Not done"),disabled:!this.canEdit,onChange:(e,t)=>{this.props.appointment.isDone=t}})))),A.createElement("br",null),this.canEdit?A.createElement(j.a,{className:"delete",iconProps:{iconName:"delete"},text:Object(p.A)("Delete"),onClick:()=>{const e=this.props.appointment;s.z.deleteModal(e._id),this.props.onDelete()}}):"",A.createElement("br",null),A.createElement("br",null),A.createElement("br",null))):A.createElement("div",null)}formatMillisecondsToTime(e){const t=Math.floor(e/36e5),n=Math.floor(e%36e5/6e4),i=Math.floor(e%36e5%6e4/1e3);return{hours:a(t),minutes:a(n),seconds:a(i)};function a(e){return e>9?e.toString():"0"+e.toString()}}manuallyUpdateTime(){const e=this.timerInputs[0],t=this.timerInputs[1],n=this.timerInputs[2];isNaN(e)||isNaN(t)||isNaN(n)||(this.props.appointment.time=36e5*e+6e4*t+1e3*n)}prescriptionToTagInput(e){return{key:e._id,text:`${e.name}: ${e.doseInMg}${Object(p.A)("mg")} ${e.timesPerDay}X${e.unitsPerTime} ${Object(p.A)(Object(s.I)(e.form))}`}}};i.c([o.k],f.prototype,"timerInputs",void 0),i.c([o.k],f.prototype,"timeComb",void 0),i.c([o.d],f.prototype,"calcTime",null),i.c([o.d],f.prototype,"otherAppointmentsNumber",null),i.c([o.d],f.prototype,"treatmentOptions",null),i.c([o.d],f.prototype,"canEdit",null),f=i.c([m.a],f)}}]);