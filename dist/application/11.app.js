(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{305:function(e,t,i){"use strict";i.r(t),i.d(t,"OrthoRecordsPanel",function(){return k});var a=i(1),o=i(7),s=i(3),n=i(9),r=i(5),l=i(58),c=i(2),d=i(8),h=i(296),p=i(15),m=i(284),b=i(13),u=i(294),g=i(289),v=i(287),E=i(301),C=i(285),y=i(297),O=i(291),j=i(286),f=i(152),B=i(0);const N=["Frontal","Right Buccal","Left Buccal","Palatal","Lingual"];let k=class extends B.Component{constructor(){super(...arguments),this.selectedPhotoId="",this.zoomedColumn=-1,this.expandedField="",this.uploadingPhotoID="",this.imagesTable={},this.showGrid=!1,this.overlayWithPrev=!1,this.overlayWithNext=!1,this.openCallouts=[],this.stopObservation=function(){}}get canEdit(){return s.C.currentUser.canEditOrtho}get dates(){return this.props.orthoCase.patient?this.props.orthoCase.patient.appointments.map(e=>({date:e.date,treatmentType:(e.treatment||{type:""}).type})).sort((e,t)=>t.date-e.date):[]}get allImages(){return this.props.orthoCase.visits.reduce((e,t)=>(t.photos.map(e=>e.photoID).forEach(t=>{t&&e.push(t)}),e),[])}componentDidMount(){this.allImages.forEach(e=>a.b(this,void 0,void 0,function*(){yield this.addImage(e)})),this.stopObservation=this.observe()}componentWillUnmount(){this.stopObservation()}addImage(e){return a.b(this,void 0,void 0,function*(){this.imagesTable[e]="";const t=yield s.n.get(e);this.imagesTable[e]=t})}removeImage(e){return a.b(this,void 0,void 0,function*(){yield s.n.remove(e),delete this.imagesTable[e]})}observe(){return Object(c.l)(this.props.orthoCase,e=>{if("visits"===e.name){const e=Object(l.diff)(Object.keys(this.imagesTable).sort(),this.allImages.sort());e.added.forEach(e=>{this.addImage(e)}),e.removed.forEach(e=>{this.removeImage(e)})}})}render(){return B.createElement("div",{className:"ortho-records"},B.createElement(o.n,{title:Object(s.B)("Problems")},0===this.props.orthoCase.computedProblems.length&&0===this.props.orthoCase.problemsList.length?B.createElement(h.a,{messageBarType:p.a.warning},Object(s.B)("This patient does not seem to have any problems or concerns, have you filled the case sheet?")):B.createElement(m.a,{compact:!0,items:[...[...this.props.orthoCase.computedProblems,...this.props.orthoCase.problemsList.map(e=>Object(s.B)("Patient concern")+": "+e)].map((e,t)=>[`${t+1}. ${e}`])],isHeaderVisible:!1,selectionMode:b.b.none})),B.createElement(o.n,{title:Object(s.B)("Treatment Plan")},this.props.orthoCase.treatmentPlan_appliance.length?"":B.createElement(h.a,{messageBarType:p.a.warning},Object(s.B)("A treatment plan must be before starting the treatment")),B.createElement(o.f,{label:Object(s.B)("Add Plan"),value:this.props.orthoCase.treatmentPlan_appliance,onChange:e=>{this.props.orthoCase.treatmentPlan_appliance=e,this.tu()},disabled:!this.canEdit})),B.createElement(o.n,{title:Object(s.B)("Started/Finished")},B.createElement(o.m,{gutter:12},B.createElement(o.c,{span:12},B.createElement(u.a,{onText:Object(s.B)("Started"),offText:Object(s.B)("Not started yet"),checked:this.props.orthoCase.isStarted,onChange:(e,t)=>this.props.orthoCase.isStarted=t,disabled:!this.canEdit}),this.props.orthoCase.isStarted?B.createElement(g.a,{selectedKey:this.props.orthoCase.startedDate.toString(),options:this.dates.map(e=>({key:e.date.toString(),text:`${Object(r.j)(e.date,n.db.getSetting("date_format"))} ${e.treatmentType?`, ${e.treatmentType}`:""}`})),disabled:!this.canEdit,onChange:(e,t)=>{this.props.orthoCase.startedDate=Object(r.r)(t.key)}}):"")," ",B.createElement(o.c,{span:12},B.createElement(u.a,{onText:Object(s.B)("Finished"),offText:Object(s.B)("Not finished yet"),checked:this.props.orthoCase.isFinished,onChange:(e,t)=>this.props.orthoCase.isFinished=t,disabled:!this.canEdit}),this.props.orthoCase.isFinished?B.createElement(g.a,{selectedKey:this.props.orthoCase.finishedDate.toString(),options:this.dates.map(e=>({key:e.date.toString(),text:`${Object(r.j)(e.date,n.db.getSetting("date_format"))} ${e.treatmentType?`, ${e.treatmentType}`:""}`})),disabled:!this.canEdit,onChange:(e,t)=>{this.props.orthoCase.finishedDate=Object(r.r)(t.key)}}):""))),B.createElement(o.n,{title:Object(s.B)("Records")},s.A.online?s.A.dropboxActive?B.createElement("div",{className:"album"},this.props.orthoCase.visits.length?B.createElement("table",null,B.createElement("tbody",null,B.createElement("tr",null,B.createElement("td",null),N.map((e,t)=>-1!==this.zoomedColumn&&this.zoomedColumn!==t?void 0:B.createElement("td",{key:e},this.zoomedColumn===t?B.createElement("p",{className:"column-header"},N[t]):B.createElement("p",{className:"term-initials"},N[t].split(" ").map(e=>e.charAt(0)).join("")),B.createElement("br",null),B.createElement(v.a,{content:Object(s.B)("Zoom")},B.createElement(E.a,{iconProps:{iconName:this.zoomedColumn===t?"ZoomOut":"ZoomIn"},className:"clickable-icon",onClick:()=>{this.zoomedColumn!==t?this.zoomedColumn=t:this.zoomedColumn=-1}})),this.zoomedColumn===t?B.createElement(v.a,{content:Object(s.B)("View grid")},B.createElement(E.a,{iconProps:{iconName:"gridViewSmall"},className:"clickable-icon",onClick:()=>{this.showGrid=!this.showGrid}})):"")),B.createElement("td",null)),this.props.orthoCase.visits.slice().sort((e,t)=>e.visitNumber-t.visitNumber).map((e,t,i)=>{const a=i[t-1]||new n.z,l=i[t+1]||new n.z;return[B.createElement("tr",{key:e.id},B.createElement("td",null,B.createElement(v.a,{content:`#${e.visitNumber}, ${Object(r.j)(e.date,n.db.getSetting("date_format"))}`},B.createElement(E.a,{id:e.id.replace(/[0-9]/g,""),iconProps:{iconName:"info"},onClick:()=>{this.openCallouts.push(e.id)}})),B.createElement(C.a,{onDismiss:()=>{this.openCallouts=this.openCallouts.filter(t=>t!==e.id)},hidden:-1===this.openCallouts.indexOf(e.id),className:"visit-dialog"},B.createElement(m.a,{compact:!0,items:[[B.createElement("div",{id:"gf-visit"},"gf-visit"===this.expandedField?B.createElement(y.a,{autoFocus:!0,type:"number",label:Object(s.B)("Visit number"),value:e.visitNumber.toString(),onBlur:()=>{this.expandedField=""},disabled:!this.canEdit,onChange:(e,i)=>{this.props.orthoCase.visits[t].visitNumber=Object(r.r)(i),this.tu()}}):`${Object(s.B)("Visit")} #${e.visitNumber}`)],[B.createElement("div",{id:"gf-date"},"gf-date"===this.expandedField?B.createElement(g.a,{label:Object(s.B)("Visit date"),selectedKey:e.date.toString(),disabled:!this.canEdit,options:this.dates.map(e=>({key:e.date.toString(),text:`${Object(r.j)(e.date,n.db.getSetting("date_format"))} ${e.treatmentType?`, ${e.treatmentType}`:""}`})),onChange:(e,i)=>{this.props.orthoCase.visits[t].date=Object(r.r)(i.key),this.tu()}}):`${Object(s.B)("Date")}: ${Object(r.j)(e.date,n.db.getSetting("date_format"))}`)],[B.createElement("div",{id:"gf-appliance"},"gf-appliance"===this.expandedField?B.createElement(y.a,{autoFocus:!0,label:Object(s.B)("Appliance"),disabled:!this.canEdit,value:e.appliance,onBlur:()=>{this.expandedField=""},multiline:!0,onChange:(e,i)=>{this.props.orthoCase.visits[t].appliance=i,this.tu()}}):`${Object(s.B)("Appliance")}: ${e.appliance?e.appliance:Object(s.B)("No appliance info")}`)]],isHeaderVisible:!1,selectionMode:b.b.none,onActiveItemChanged:e=>{this.expandedField=e[0].props.id}}))),N.map((i,c)=>{const d=e.photos[c];if(-1===this.zoomedColumn||this.zoomedColumn===c)return B.createElement("td",{key:i},this.showGrid&&this.zoomedColumn===c&&this.imagesTable[d.photoID]?B.createElement(o.g,null):"",d.photoID?this.imagesTable[d.photoID]?B.createElement("div",{key:e.id,className:"photo",onClick:()=>{this.selectedPhotoId=d.id}},B.createElement(O.a,{iconName:"MiniExpandMirrored",className:"hover-effect"}),B.createElement("img",{style:{width:"100%"},src:this.imagesTable[d.photoID],className:"ortho-img-el"}),this.selectedPhotoId===d.id?B.createElement(C.a,{modalProps:{className:"photo-dialog"},hidden:!1,onDismiss:()=>this.selectedPhotoId=""},B.createElement("div",{style:{position:"relative"}},B.createElement("img",{style:{width:"100%"},src:this.imagesTable[d.photoID]}),this.overlayWithNext?B.createElement("img",{className:"overlay-img",src:this.imagesTable[l.photos[c].photoID]}):"",this.overlayWithPrev?B.createElement("img",{className:"overlay-img",src:this.imagesTable[a.photos[c].photoID]}):""),B.createElement(m.a,{compact:!0,items:[[B.createElement("div",{id:"gf-visit"},"gf-visit"===this.expandedField?B.createElement(y.a,{autoFocus:!0,disabled:!this.canEdit,type:"number",label:Object(s.B)("Visit number"),value:e.visitNumber.toString(),onBlur:()=>{this.expandedField=""},onChange:(e,i)=>{this.props.orthoCase.visits[t].visitNumber=Object(r.r)(i),this.tu()}}):`${Object(s.B)("Visit")} #${e.visitNumber}`)],[B.createElement("div",{id:"gf-date"},"gf-date"===this.expandedField?B.createElement(g.a,{label:Object(s.B)("Visit date"),disabled:!this.canEdit,selectedKey:e.date.toString(),options:this.dates.map(e=>({key:e.date.toString(),text:`${Object(r.j)(e.date,n.db.getSetting("date_format"))} ${e.treatmentType?`, ${e.treatmentType}`:""}`})),onChange:(e,i)=>{this.props.orthoCase.visits[t].date=Object(r.r)(i.key),this.tu()}}):`${Object(s.B)("Date")}: ${Object(r.j)(e.date,n.db.getSetting("date_format"))}`)],[B.createElement("div",{id:"gf-appliance"},"gf-appliance"===this.expandedField?B.createElement(y.a,{autoFocus:!0,label:Object(s.B)("Appliance"),value:e.appliance,disabled:!this.canEdit,onBlur:()=>{this.expandedField=""},multiline:!0,onChange:(e,i)=>{this.props.orthoCase.visits[t].appliance=i,this.tu()}}):`${Object(s.B)("Appliance")}: ${e.appliance?e.appliance:Object(s.B)("No appliance info")}`)],[B.createElement("div",{id:"gf-comment"},"gf-comment"===this.expandedField?B.createElement(y.a,{autoFocus:!0,label:Object(s.B)("Comment"),disabled:!this.canEdit,value:d.comment,onBlur:()=>{this.expandedField=""},multiline:!0,onChange:(e,i)=>{this.props.orthoCase.visits[t].photos[c].comment=i,this.tu()}}):`${Object(s.B)("Comment")}: ${d.comment?d.comment:Object(s.B)("no comment on this photo")}`)]],isHeaderVisible:!1,selectionMode:b.b.none,onActiveItemChanged:e=>{this.expandedField=e[0].props.id}}),B.createElement(j.a,{items:[{key:"overlay prev",text:Object(s.B)("Overlay prev"),iconProps:{iconName:"MapLayers"},className:this.overlayWithPrev?"active-button":void 0,onClick:()=>{this.overlayWithPrev=!this.overlayWithPrev},hidden:!this.imagesTable[a.photos[c].photoID]},{key:"overlay next",text:Object(s.B)("Overlay next"),iconProps:{iconName:"MapLayers"},className:this.overlayWithNext?"active-button":void 0,onClick:()=>{this.overlayWithNext=!this.overlayWithNext},hidden:!this.imagesTable[l.photos[c].photoID]}],farItems:[{key:"delete photo",text:Object(s.B)("Delete"),iconProps:{iconName:"trash"},disabled:!this.canEdit,onClick:()=>{this.props.orthoCase.visits[t].photos[c]=new n.r,this.selectedPhotoId="",this.tu()}}]})):""):B.createElement(O.a,{iconName:"sync",className:"rotate"}):B.createElement(o.i,Object.assign({},{crop:!0,allowMultiple:!1,accept:o.t.image,prevSrc:this.imagesTable[a.photos[c].photoID],disabled:!this.canEdit,onFinish:e=>{e[0]&&(this.props.orthoCase.visits[t].photos[c].photoID=e[0],this.tu())},onStartLoading:()=>{this.uploadingPhotoID=d.id},onFinishLoading:()=>{this.uploadingPhotoID=""},targetDir:`${s.g}/${this.props.orthoCase._id}`}),B.createElement(v.a,{content:Object(s.B)("Add photo")},B.createElement(E.a,{iconProps:{iconName:"Photo2Add"},className:"clickable-icon add-photo",disabled:!this.canEdit}))))}),B.createElement("td",null,B.createElement(v.a,{content:Object(s.B)("Delete visit")},B.createElement(E.a,{className:"clickable-icon delete-visit",key:e.id,disabled:!this.canEdit,iconProps:{iconName:"DeleteRows"},onClick:()=>{s.u.newModal({message:Object(s.B)("This visit data will be deleted along with all photos and notes"),onConfirm:()=>{this.props.orthoCase.visits.splice(t,1),this.tu()},showCancelButton:!0,showConfirmButton:!0,id:Math.random()})}})))),B.createElement("tr",{key:e.id+"days"},B.createElement("td",{colSpan:7},i[t+1]?B.createElement("i",{className:"days-num"},Math.round((l.date-e.date)/r.d)," ",Object(s.B)("days")):""))]}))):B.createElement(h.a,{messageBarType:p.a.info},Object(s.B)("No visits recorded yet! add a new visit using the button below")),B.createElement("br",null),B.createElement(f.a,{disabled:!this.canEdit,iconProps:{iconName:"ExploreContent"},text:Object(s.B)("Add visit"),onClick:()=>{const e=this.props.orthoCase.visits.length?this.props.orthoCase.visits.slice().sort((e,t)=>t.visitNumber-e.visitNumber)[0].visitNumber+1:1;this.props.orthoCase.visits.push(new n.z(void 0,e)),this.tu()}})):B.createElement(h.a,{messageBarType:p.a.warning},Object(s.B)("A valid DropBox access token is required for this section")):B.createElement(h.a,{messageBarType:p.a.warning},Object(s.B)("You can not access orthodontic records while offline"))),B.createElement(o.n,{title:Object(s.B)("Notes for the next visit")},B.createElement(o.f,{label:Object(s.B)("Add note"),value:this.props.orthoCase.nextVisitNotes,onChange:e=>{this.props.orthoCase.nextVisitNotes=e,this.tu()},disabled:!this.canEdit})))}tu(){this.props.orthoCase.triggerUpdate++}};a.c([c.k],k.prototype,"selectedPhotoId",void 0),a.c([c.k],k.prototype,"zoomedColumn",void 0),a.c([c.k],k.prototype,"expandedField",void 0),a.c([c.k],k.prototype,"uploadingPhotoID",void 0),a.c([c.k],k.prototype,"imagesTable",void 0),a.c([c.k],k.prototype,"showGrid",void 0),a.c([c.k],k.prototype,"overlayWithPrev",void 0),a.c([c.k],k.prototype,"overlayWithNext",void 0),a.c([c.k],k.prototype,"openCallouts",void 0),a.c([c.d],k.prototype,"canEdit",null),a.c([c.d],k.prototype,"dates",null),a.c([c.d],k.prototype,"allImages",null),k=a.c([d.a],k)}}]);